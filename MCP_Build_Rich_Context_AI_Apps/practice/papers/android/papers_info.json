{
  "1611.00837v1": {
    "title": "Context-aware System Service Call-oriented Symbolic Execution of Android Framework with Application to Exploit Generation",
    "authors": [
      "Lannan Luo",
      "Qiang Zeng",
      "Chen Cao",
      "Kai Chen",
      "Jian Liu",
      "Limin Liu",
      "Neng Gao",
      "Min Yang",
      "Xinyu Xing",
      "Peng Liu"
    ],
    "summary": "Android Framework is a layer of software that exists in every Android system\nmanaging resources of all Android apps. A vulnerability in Android Framework\ncan lead to severe hacks, such as destroying user data and leaking private\ninformation. With tens of millions of Android devices unpatched due to Android\nfragmentation, vulnerabilities in Android Framework certainly attract attackers\nto exploit them. So far, enormous manual effort is needed to craft such\nexploits. To our knowledge, no research has been done on automatic generation\nof exploits that take advantage of Android Framework vulnerabilities. We make a\nfirst step towards this goal by applying symbolic execution of Android\nFramework to finding bugs and generating exploits. Several challenges have been\nraised by the task. (1) The information of an app flows to Android Framework in\nmultiple intricate steps, making it difficult to identify symbolic inputs. (2)\nAndroid Framework has a complex initialization phase, which exacerbates the\nstate space explosion problem. (3) A straightforward design that builds the\nsymbolic executor as a layer inside the Android system will not work well: not\nonly does the implementation have to ensure the compatibility with the Android\nsystem, but it needs to be maintained whenever Android gets updated. We present\nnovel ideas and techniques to resolve the challenges, and have built the first\nsystem for symbolic execution of Android Framework. It fundamentally changes\nthe state of the art in exploit generation on the Android system, and has been\napplied to constructing new techniques for finding vulnerabilities.",
    "pdf_url": "http://arxiv.org/pdf/1611.00837v1",
    "published": "2016-11-02"
  },
  "1209.0687v1": {
    "title": "Security Issues in the Android Cross-Layer Architecture",
    "authors": [
      "Alessandro Armando",
      "Alessio Merlo",
      "Luca Verderame"
    ],
    "summary": "The security of Android has been recently challenged by the discovery of a\nnumber of vulnerabilities involving different layers of the Android stack. We\nargue that such vulnerabilities are largely related to the interplay among\nlayers composing the Android stack. Thus, we also argue that such interplay has\nbeen underestimated from a security point-of-view and a systematic analysis of\nthe Android interplay has not been carried out yet. To this aim, in this paper\nwe provide a simple model of the Android cross-layer interactions based on the\nconcept of flow, as a basis for analyzing the Android interplay. In particular,\nour model allows us to reason about the security implications associated with\nthe cross-layer interactions in Android, including a recently discovered\nvulnerability that allows a malicious application to make Android devices\ntotally unresponsive. We used the proposed model to carry out an empirical\nassessment of some flows within the Android cross-layered architecture. Our\nexperiments indicate that little control is exercised by the Android Security\nFramework (ASF) over cross-layer interactions in Android. In particular, we\nobserved that the ASF lacks in discriminating the originator of a flow and\nsensitive security issues arise between the Android stack and the Linux kernel,\nthereby indicating that the attack surface of the Android platform is wider\nthan expected.",
    "pdf_url": "http://arxiv.org/pdf/1209.0687v1",
    "published": "2012-09-04"
  }
}